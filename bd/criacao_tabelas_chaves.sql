-- Armando Augusto Marchini Vidal - 13673072
-- Marcos Vilela Rezende Júnior - 13729806

CREATE TABLE MEDICO (
    Crm VARCHAR(15),
    NomeM VARCHAR (100),
    TelefoneM VARCHAR(20),
    Percentual DECIMAL,
    
    CONSTRAINT PK_MEDICO PRIMARY KEY(Crm)
);

CREATE TABLE PACIENTE (
    IdPac INT,
    Cpf CHAR(11),
    NomeP VARCHAR (100),
    TelefonePac VARCHAR(20),
    Endereco VARCHAR(100),
    Idade INT,
    Sexo Char(2),
    
    CONSTRAINT PK_PACIENTE PRIMARY KEY(IdPac),
	CONSTRAINT CK_PACIENTE UNIQUE(Cpf)
);

CREATE TABLE DOENCA (
    IdDoenca INT,
    NomeD VARCHAR(100),
    
    CONSTRAINT PK_DOENCA PRIMARY KEY(IdDoenca)
);

CREATE TABLE ESPECIALIDADE (
    IdEsp INT,
    NomeE VARCHAR(30),
    Indice INT,
    
    CONSTRAINT PK_ESPECIALIDADE PRIMARY KEY(IdEsp)
);

CREATE TABLE AGENDA (
    IdAgenda INT,
    DiaSemana INT,
    HoraInicio TIME,
    HoraFim TIME,
    Crm VARCHAR(15),
    
    CONSTRAINT PK_AGENDA PRIMARY KEY(IdAgenda),
    CONSTRAINT FK_AGENDA_MEDICO FOREIGN KEY(Crm) REFERENCES MEDICO(Crm)
        ON DELETE CASCADE
);

CREATE TABLE EXERCE_ESP (
    Crm VARCHAR(15),
    IdEsp INT,
    
    CONSTRAINT PK_EXERCE_ESP PRIMARY KEY(Crm, IdEsp),
    CONSTRAINT FK_EXERCE_ESP_MEDICO FOREIGN KEY(Crm) REFERENCES MEDICO(Crm)
        ON DELETE CASCADE,
    CONSTRAINT FK_EXERCE_ESP_ESPECIALIDADE FOREIGN KEY(IdEsp) REFERENCES ESPECIALIDADE(IdEsp)
        ON DELETE CASCADE
);

CREATE TABLE CONSULTA (
    IdCon INT,
    Crm VARCHAR(15),
    IdEsp INT,
    IdPac INT,
    Dia DATE,
    HoraInicCon TIME,
    HoraFimCon TIME,
    Pagou BOOLEAN,
    ValorPago DECIMAL,
    FormaPagamento VARCHAR(15),
    
    CONSTRAINT PK_CONSULTA PRIMARY KEY (IdCon),
    CONSTRAINT FK_CONSULTA_MEDICO FOREIGN KEY(Crm) REFERENCES MEDICO(Crm)
        ON DELETE CASCADE,
    CONSTRAINT FK_CONSULTA_ESPECIALIDADE FOREIGN KEY(IdEsp) REFERENCES ESPECIALIDADE(IdEsp)
        ON DELETE CASCADE,
    CONSTRAINT FK_CONSULTA_PACIENTE FOREIGN KEY(IdPac) REFERENCES PACIENTE(IdPac)
        ON DELETE CASCADE,
    CONSTRAINT CK_CONSULTA UNIQUE(Crm, IdEsp, IdpAC, Dia)
);

CREATE TABLE DIAGNOSTICO (
    IdDiagnostico INT,
    TratamentoRecomendado VARCHAR(100),
    RemediosReceitados VARCHAR(500),
    Observacoes VARCHAR(500),
    IdCon INT,
    
    CONSTRAINT PK_DIAGNOSTICO PRIMARY KEY(IdDiagnostico),
	CONSTRAINT FK_DIAGNOSTICO_CONSULTA FOREIGN KEY(IdCon) REFERENCES CONSULTA(IdCon)
        ON DELETE CASCADE
);

CREATE TABLE DIAGNOSTICA (
    IdDiagnostico INT,
    IdDoenca INT,
    
    CONSTRAINT PK_DIAGNOSTICA PRIMARY KEY(IdDiagnostico, IdDoenca),
    CONSTRAINT FK_DIAGNOSTICA_DIAGNOSTICO FOREIGN KEY(IdDiagnostico) REFERENCES DIAGNOSTICO(IdDiagnostico)
        ON DELETE CASCADE,
    CONSTRAINT FK_DIAGNOSTICA_DOENCA FOREIGN KEY(IdDoenca) REFERENCES DOENCA(IdDoenca)
        ON DELETE CASCADE
);

CREATE OR REPLACE FUNCTION CONSULTA_DUPLICADA_OU_HORARIO_INDISPONIVEL() RETURNS TRIGGER AS $$
BEGIN
    IF (SELECT COUNT(*)
        FROM AGENDA 
        WHERE DiaSemana = EXTRACT(DOW FROM NEW.Dia) AND Crm = NEW.Crm AND NEW.HoraInicCon = HoraInicio) = 0
    OR (SELECT COUNT(*) 
        FROM CONSULTA 
        WHERE Dia = NEW.Dia AND Crm = NEW.Crm AND NEW.HoraInicCon = HoraInicCon) > 0 
        THEN
        RAISE EXCEPTION 'Operação Inválida: horário já ocupado';
    END IF;
    
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER CONSULTA_DUPLICADA_OU_HORARIO_INDISPONIVEL
BEFORE INSERT ON CONSULTA
FOR EACH ROW
EXECUTE FUNCTION CONSULTA_DUPLICADA_OU_HORARIO_INDISPONIVEL();